"""initial_migration

Revision ID: a600464b4575
Revises: 
Create Date: 2025-02-08 16:00:32.995863

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a600464b4575'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('wallet_address', sa.String(length=42), nullable=True),
    sa.Column('nonce', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('reputation_score', sa.Integer(), nullable=True),
    sa.Column('profile', sa.JSON(), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_index(op.f('ix_users_wallet_address'), 'users', ['wallet_address'], unique=True)
    op.create_table('agents',
    sa.Column('token_id', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('category', sa.Enum('ANALYTICS', 'CONTENT', 'DATA_PROCESSING', 'AUTOMATION', 'TRADING', 'CREATIVE', name='agentcategory'), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'TRAINING', 'READY', 'LISTED', 'SOLD', 'DELISTED', name='agentstatus'), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('is_listed', sa.Boolean(), nullable=True),
    sa.Column('royalty_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('ipfs_hash', sa.String(length=100), nullable=True),
    sa.Column('agent_metadata', sa.JSON(), nullable=True),
    sa.Column('capabilities', sa.JSON(), nullable=True),
    sa.Column('model_parameters', sa.JSON(), nullable=True),
    sa.Column('total_uses', sa.Integer(), nullable=True),
    sa.Column('average_rating', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('total_ratings', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agents_id'), 'agents', ['id'], unique=False)
    op.create_index(op.f('ix_agents_token_id'), 'agents', ['token_id'], unique=True)
    op.create_table('oauth_accounts',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('provider', sa.String(length=50), nullable=True),
    sa.Column('provider_user_id', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('ai_models',
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('model_type', sa.Enum('GPT4O', 'BERT', 'T5', 'CUSTOM', name='modeltype'), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Enum('INITIALIZING', 'TRAINING', 'VALIDATING', 'READY', 'FAILED', name='modelstatus'), nullable=True),
    sa.Column('architecture', sa.JSON(), nullable=True),
    sa.Column('training_config', sa.JSON(), nullable=True),
    sa.Column('performance_metrics', sa.JSON(), nullable=True),
    sa.Column('checkpoint_hash', sa.String(length=100), nullable=True),
    sa.Column('weights_hash', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('agent_id')
    )
    op.create_index(op.f('ix_ai_models_id'), 'ai_models', ['id'], unique=False)
    op.create_table('transactions',
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('buyer_id', sa.Integer(), nullable=True),
    sa.Column('seller_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=18, scale=8), nullable=False),
    sa.Column('royalty_amount', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('gas_fee', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'REFUNDED', name='transactionstatus'), nullable=True),
    sa.Column('type', sa.Enum('PURCHASE', 'ROYALTY', 'REFUND', name='transactiontype'), nullable=True),
    sa.Column('transaction_hash', sa.String(length=66), nullable=True),
    sa.Column('block_number', sa.Integer(), nullable=True),
    sa.Column('blockchain_status', sa.String(length=50), nullable=True),
    sa.Column('tx_metadata', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_hash')
    )
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.create_table('training_jobs',
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='trainingstatus'), nullable=True),
    sa.Column('epochs_completed', sa.Integer(), nullable=True),
    sa.Column('current_loss', sa.Float(), nullable=True),
    sa.Column('current_accuracy', sa.Float(), nullable=True),
    sa.Column('training_config', sa.JSON(), nullable=True),
    sa.Column('progress', sa.Float(), nullable=True),
    sa.Column('error_message', sa.String(length=500), nullable=True),
    sa.Column('metrics', sa.JSON(), nullable=True),
    sa.Column('validation_results', sa.JSON(), nullable=True),
    sa.Column('compute_time', sa.Integer(), nullable=True),
    sa.Column('resources_used', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['ai_models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_jobs_id'), 'training_jobs', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_training_jobs_id'), table_name='training_jobs')
    op.drop_table('training_jobs')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_ai_models_id'), table_name='ai_models')
    op.drop_table('ai_models')
    op.drop_table('oauth_accounts')
    op.drop_index(op.f('ix_agents_token_id'), table_name='agents')
    op.drop_index(op.f('ix_agents_id'), table_name='agents')
    op.drop_table('agents')
    op.drop_index(op.f('ix_users_wallet_address'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
